Pour ajouter un lien : add_link, pour un suprimer un il faut utliser remove_link. Pour certains équipement il faut des port obligatoire par example un loadbalancer il 
faut forcement un port "in", il n'est donc pas possible de suprimer ce lien qui est sur le port in d'un loadbalancer. Pour pouvoir swapper un lien sur un port obligatoire il faut au préalable faire 
un add_link sur les port obligatoire et après faire un remove_link qui va supprimer l'ancien link et mettre le nouveau. 
Un add_link ne va pas forcement tout de suite ajouter un lien car si une des parties du lien est un port obligatoire comme le port "in" d'un loadbalancer et un des lien d'un firewall/repeater.
Si le lien ajouté est sur un port obligtoire il va être sauvergardé jusqu'à qu'un remove_link supprime l'ancien port et le remaplce par celui-la.
Par contre si le port n'est pas obligatoire alors le port va être directement prit en compte. 
remove_link sur un port obligatoire qui n'a pas de remplacent (ajuté avec add_link) alors l'opération est refusé.
L'aventage  de cette solution est qu'il n'est pas possible d'avoir des equipement instable dans le sens qu'il est incomplet. Un loadbalancer ne peut pas se retrouver sans 
port in. Si nous n'avons pas fait ca il y aurait eu deux scénarios : 
    - Soit il aurait fallu gerer tout les cas pour mettre a jour les tables (avec beacoup de drop) pour eviter d'utiliser les port inutiliser 
    - Soit ne rien faire mais il y aurait beacoup de scenario avec des bugs ou les tables enverrai et receverai des packets sur port inutilisé


Le seul defaut et que si un lien est d'un part sur un port obligatoire (in de loadbalancer) et d'autre part sur un port non obligatoire (port d'un router). Alors add_link
va activer le port coté router mais pas encore coté loadbalancer, ce qui posé des pertes de packets. Mais il est attendu que l'utlisateur fasse rapidement un remove_link pour appliquer le nouveau
port in du loadbalancer


Chatgpt reforumaltion 


Pour ajouter un lien : utilisez add_link, pour le supprimer, il faut utiliser remove_link. Pour certains équipements, des ports obligatoires sont nécessaires, par exemple, un load balancer nécessite forcément un port "in", il n'est donc pas possible de supprimer ce lien qui est sur le port "in" d'un load balancer.

Pour pouvoir remplacer un lien sur un port obligatoire, il faut au préalable exécuter un add_link sur le port obligatoire, puis effectuer un remove_link qui supprimera l'ancien lien et ajoutera le nouveau. Un add_link n'ajoutera pas forcément immédiatement un lien car si l'une des parties du lien est un port obligatoire, comme le port "in" d'un load balancer et l'un des liens d'un pare-feu/repeater.

Si le lien ajouté est sur un port obligatoire, il sera sauvegardé jusqu'à ce qu'un remove_link supprime l'ancien port et le remplace par celui-ci. Cependant, si le port n'est pas obligatoire, il sera pris en compte immédiatement. Si remove_link est utilisé sur un port obligatoire sans remplacement (ajouté avec add_link), alors l'opération sera refusée.

L'avantage de cette solution est qu'il n'est pas possible d'avoir des équipements instables dans le sens qu'ils sont incomplets. Un load balancer ne peut pas se retrouver sans port "in". Si nous n'avions pas fait cela, il y aurait eu deux scénarios : 
- Soit il aurait fallu gérer tous les cas pour mettre à jour les tables (avec beaucoup de drop) afin d'éviter d'utiliser les ports inutilisés.
- Soit ne rien faire, mais il y aurait eu beaucoup de scénarios avec des bugs où les tables enverraient et recevraient des paquets sur des ports inutilisés.

Le seul défaut est que si un lien est d'une part sur un port obligatoire (in de load balancer) et d'autre part sur un port non obligatoire (port d'un routeur), alors add_link activera le port côté routeur mais pas encore côté load balancer, ce qui peut entraîner des pertes de paquets. Cependant, il est attendu que l'utilisateur effectue rapidement un remove_link pour appliquer le nouveau port "in" du load balancer.